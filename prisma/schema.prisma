// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String               @id @default(uuid())
  name               String
  email              String               @unique
  password           String
  status             Status               @default(ACTIVE)
  role               Role                 @default(USER)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  trip               Trip[]
  travelBuddyRequest TravelBuddyRequest[]
  userProfile        UserProfile?

  @@map("users")
}

model Trip {
  id                 String               @id @default(uuid())
  userId             String
  destination        String
  description        String
  startDate          String
  endDate            String
  budget             Float
  activities         String[]
  type               String
  photo              String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  user               User                 @relation(fields: [userId], references: [id])
  travelBuddyRequest TravelBuddyRequest[]

  @@map("trips")
}

model TravelBuddyRequest {
  id        String   @id @default(uuid())
  tripId    String
  trip      Trip     @relation(fields: [tripId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("travelbuddyrequests")
}

model UserProfile {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  bio       String?
  age       Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId])
  @@map("userprofiles")
}

enum Status {
  ACTIVE
  DEACTIVE
}

enum Role {
  USER
  ADMIN
}
